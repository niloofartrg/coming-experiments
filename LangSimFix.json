{
  "instances": [
    {
      "revision": "Lang16",
      "repairability": [
        {
          "tool-name": "NPEfix",
          "pattern-name": "NPEfix:replacement1",
          "Unified_Diff_of-files:": "Starts Below...",
          "INSERT:": "        str\u003dstr.toLowerCase();\r",
          "instance_detail": [
            {
              "pattern_action": "INS",
              "pattern_entity": {
                "entity_type": "Assignment",
                "entity_new value": "*",
                "entity_role": "*",
                "entity_parent": "null"
              },
              "concrete_change": {
                "operator": "INS",
                "src_type": "Assignment",
                "dst_type": "null",
                "src": "str \u003d str.toLowerCase()",
                "dst": "null",
                "src_parent_type": "Block",
                "dst_parent_type": "null",
                "src_parent": "{\n    if (str \u003d\u003d null) {\n        return null;\n    }\n    str \u003d str.toLowerCase();\n    if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n        throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n    }\n    if (str.startsWith(\"--\")) {\n        return null;\n    }\n    if ((str.startsWith(\"0x\")) || (str.startsWith(\"-0x\"))) {\n        return org.apache.commons.lang3.math.NumberUtils.createInteger(str);\n    }\n    char lastChar \u003d str.charAt(((str.length()) - 1));\n    java.lang.String mant;\n    java.lang.String dec;\n    java.lang.String exp;\n    int decPos \u003d str.indexOf(\u0027.\u0027);\n    int expPos \u003d ((str.indexOf(\u0027e\u0027)) + (str.indexOf(\u0027E\u0027))) + 1;\n    if (decPos \u003e (-1)) {\n        if (expPos \u003e (-1)) {\n            if ((expPos \u003c decPos) || (expPos \u003e (str.length()))) {\n                throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n            }\n            dec \u003d str.substring((decPos + 1), expPos);\n        } else {\n            dec \u003d str.substring((decPos + 1));\n        }\n        mant \u003d str.substring(0, decPos);\n    } else {\n        if (expPos \u003e (-1)) {\n            if (expPos \u003e (str.length())) {\n                throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n            }\n            mant \u003d str.substring(0, expPos);\n        } else {\n            mant \u003d str;\n        }\n        dec \u003d null;\n    }\n    if ((!(java.lang.Character.isDigit(lastChar))) \u0026\u0026 (lastChar !\u003d \u0027.\u0027)) {\n        if ((expPos \u003e (-1)) \u0026\u0026 (expPos \u003c ((str.length()) - 1))) {\n            exp \u003d str.substring((expPos + 1), ((str.length()) - 1));\n        } else {\n            exp \u003d null;\n        }\n        java.lang.String numeric \u003d str.substring(0, ((str.length()) - 1));\n        boolean allZeros \u003d (org.apache.commons.lang3.math.NumberUtils.isAllZeros(mant)) \u0026\u0026 (org.apache.commons.lang3.math.NumberUtils.isAllZeros(exp));\n        switch (lastChar) {\n            case \u0027l\u0027 :\n            case \u0027L\u0027 :\n                if (((dec \u003d\u003d null) \u0026\u0026 (exp \u003d\u003d null)) \u0026\u0026 ((((numeric.charAt(0)) \u003d\u003d \u0027-\u0027) \u0026\u0026 (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))) {\n                    try {\n                        return org.apache.commons.lang3.math.NumberUtils.createLong(numeric);\n                    } catch (java.lang.NumberFormatException nfe) {\n                    }\n                    return org.apache.commons.lang3.math.NumberUtils.createBigInteger(numeric);\n                }\n                throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n            case \u0027f\u0027 :\n            case \u0027F\u0027 :\n                try {\n                    java.lang.Float f \u003d org.apache.commons.lang3.math.NumberUtils.createFloat(numeric);\n                    if (!((f.isInfinite()) || (((f.floatValue()) \u003d\u003d 0.0F) \u0026\u0026 (!allZeros)))) {\n                        return f;\n                    }\n                } catch (java.lang.NumberFormatException nfe) {\n                }\n            case \u0027d\u0027 :\n            case \u0027D\u0027 :\n                try {\n                    java.lang.Double d \u003d org.apache.commons.lang3.math.NumberUtils.createDouble(numeric);\n                    if (!((d.isInfinite()) || (((d.floatValue()) \u003d\u003d 0.0) \u0026\u0026 (!allZeros)))) {\n                        return d;\n                    }\n                } catch (java.lang.NumberFormatException nfe) {\n                }\n                try {\n                    return org.apache.commons.lang3.math.NumberUtils.createBigDecimal(numeric);\n                } catch (java.lang.NumberFormatException e) {\n                }\n            default :\n                throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n        }\n    } else {\n        if ((expPos \u003e (-1)) \u0026\u0026 (expPos \u003c ((str.length()) - 1))) {\n            exp \u003d str.substring((expPos + 1), str.length());\n        } else {\n            exp \u003d null;\n        }\n        if ((dec \u003d\u003d null) \u0026\u0026 (exp \u003d\u003d null)) {\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.createInteger(str);\n            } catch (java.lang.NumberFormatException nfe) {\n            }\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.createLong(str);\n            } catch (java.lang.NumberFormatException nfe) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.createBigInteger(str);\n        } else {\n            boolean allZeros \u003d (org.apache.commons.lang3.math.NumberUtils.isAllZeros(mant)) \u0026\u0026 (org.apache.commons.lang3.math.NumberUtils.isAllZeros(exp));\n            try {\n                java.lang.Float f \u003d org.apache.commons.lang3.math.NumberUtils.createFloat(str);\n                if (!((f.isInfinite()) || (((f.floatValue()) \u003d\u003d 0.0F) \u0026\u0026 (!allZeros)))) {\n                    return f;\n                }\n            } catch (java.lang.NumberFormatException nfe) {\n            }\n            try {\n                java.lang.Double d \u003d org.apache.commons.lang3.math.NumberUtils.createDouble(str);\n                if (!((d.isInfinite()) || (((d.doubleValue()) \u003d\u003d 0.0) \u0026\u0026 (!allZeros)))) {\n                    return d;\n                }\n            } catch (java.lang.NumberFormatException nfe) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.createBigDecimal(str);\n        }\n    }\n}",
                "dst_parent": "null"
              },
              "line": 448,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang16"
            }
          ]
        },
        {
          "tool-name": "Arja",
          "pattern-name": "Arja:any_statement_shallow",
          "Unified_Diff_of-files:": "Starts Below...",
          "INSERT:": "        str\u003dstr.toLowerCase();\r",
          "instance_detail": [
            {
              "pattern_action": "ANY",
              "pattern_entity": {
                "entity_type": "*",
                "entity_new value": "*",
                "entity_role": "Statement",
                "entity_parent": "null"
              },
              "concrete_change": {
                "operator": "INS",
                "src_type": "Assignment",
                "dst_type": "null",
                "src": "str \u003d str.toLowerCase()",
                "dst": "null",
                "src_parent_type": "Block",
                "dst_parent_type": "null",
                "src_parent": "{\n    if (str \u003d\u003d null) {\n        return null;\n    }\n    str \u003d str.toLowerCase();\n    if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n        throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n    }\n    if (str.startsWith(\"--\")) {\n        return null;\n    }\n    if ((str.startsWith(\"0x\")) || (str.startsWith(\"-0x\"))) {\n        return org.apache.commons.lang3.math.NumberUtils.createInteger(str);\n    }\n    char lastChar \u003d str.charAt(((str.length()) - 1));\n    java.lang.String mant;\n    java.lang.String dec;\n    java.lang.String exp;\n    int decPos \u003d str.indexOf(\u0027.\u0027);\n    int expPos \u003d ((str.indexOf(\u0027e\u0027)) + (str.indexOf(\u0027E\u0027))) + 1;\n    if (decPos \u003e (-1)) {\n        if (expPos \u003e (-1)) {\n            if ((expPos \u003c decPos) || (expPos \u003e (str.length()))) {\n                throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n            }\n            dec \u003d str.substring((decPos + 1), expPos);\n        } else {\n            dec \u003d str.substring((decPos + 1));\n        }\n        mant \u003d str.substring(0, decPos);\n    } else {\n        if (expPos \u003e (-1)) {\n            if (expPos \u003e (str.length())) {\n                throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n            }\n            mant \u003d str.substring(0, expPos);\n        } else {\n            mant \u003d str;\n        }\n        dec \u003d null;\n    }\n    if ((!(java.lang.Character.isDigit(lastChar))) \u0026\u0026 (lastChar !\u003d \u0027.\u0027)) {\n        if ((expPos \u003e (-1)) \u0026\u0026 (expPos \u003c ((str.length()) - 1))) {\n            exp \u003d str.substring((expPos + 1), ((str.length()) - 1));\n        } else {\n            exp \u003d null;\n        }\n        java.lang.String numeric \u003d str.substring(0, ((str.length()) - 1));\n        boolean allZeros \u003d (org.apache.commons.lang3.math.NumberUtils.isAllZeros(mant)) \u0026\u0026 (org.apache.commons.lang3.math.NumberUtils.isAllZeros(exp));\n        switch (lastChar) {\n            case \u0027l\u0027 :\n            case \u0027L\u0027 :\n                if (((dec \u003d\u003d null) \u0026\u0026 (exp \u003d\u003d null)) \u0026\u0026 ((((numeric.charAt(0)) \u003d\u003d \u0027-\u0027) \u0026\u0026 (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))) {\n                    try {\n                        return org.apache.commons.lang3.math.NumberUtils.createLong(numeric);\n                    } catch (java.lang.NumberFormatException nfe) {\n                    }\n                    return org.apache.commons.lang3.math.NumberUtils.createBigInteger(numeric);\n                }\n                throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n            case \u0027f\u0027 :\n            case \u0027F\u0027 :\n                try {\n                    java.lang.Float f \u003d org.apache.commons.lang3.math.NumberUtils.createFloat(numeric);\n                    if (!((f.isInfinite()) || (((f.floatValue()) \u003d\u003d 0.0F) \u0026\u0026 (!allZeros)))) {\n                        return f;\n                    }\n                } catch (java.lang.NumberFormatException nfe) {\n                }\n            case \u0027d\u0027 :\n            case \u0027D\u0027 :\n                try {\n                    java.lang.Double d \u003d org.apache.commons.lang3.math.NumberUtils.createDouble(numeric);\n                    if (!((d.isInfinite()) || (((d.floatValue()) \u003d\u003d 0.0) \u0026\u0026 (!allZeros)))) {\n                        return d;\n                    }\n                } catch (java.lang.NumberFormatException nfe) {\n                }\n                try {\n                    return org.apache.commons.lang3.math.NumberUtils.createBigDecimal(numeric);\n                } catch (java.lang.NumberFormatException e) {\n                }\n            default :\n                throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n        }\n    } else {\n        if ((expPos \u003e (-1)) \u0026\u0026 (expPos \u003c ((str.length()) - 1))) {\n            exp \u003d str.substring((expPos + 1), str.length());\n        } else {\n            exp \u003d null;\n        }\n        if ((dec \u003d\u003d null) \u0026\u0026 (exp \u003d\u003d null)) {\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.createInteger(str);\n            } catch (java.lang.NumberFormatException nfe) {\n            }\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.createLong(str);\n            } catch (java.lang.NumberFormatException nfe) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.createBigInteger(str);\n        } else {\n            boolean allZeros \u003d (org.apache.commons.lang3.math.NumberUtils.isAllZeros(mant)) \u0026\u0026 (org.apache.commons.lang3.math.NumberUtils.isAllZeros(exp));\n            try {\n                java.lang.Float f \u003d org.apache.commons.lang3.math.NumberUtils.createFloat(str);\n                if (!((f.isInfinite()) || (((f.floatValue()) \u003d\u003d 0.0F) \u0026\u0026 (!allZeros)))) {\n                    return f;\n                }\n            } catch (java.lang.NumberFormatException nfe) {\n            }\n            try {\n                java.lang.Double d \u003d org.apache.commons.lang3.math.NumberUtils.createDouble(str);\n                if (!((d.isInfinite()) || (((d.doubleValue()) \u003d\u003d 0.0) \u0026\u0026 (!allZeros)))) {\n                    return d;\n                }\n            } catch (java.lang.NumberFormatException nfe) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.createBigDecimal(str);\n        }\n    }\n}",
                "dst_parent": "null"
              },
              "line": 448,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang16"
            }
          ]
        },
        {
          "tool-name": "Elixir",
          "pattern-name": "Elixir:Insert_Invocation",
          "Unified_Diff_of-files:": "Starts Below...",
          "INSERT:": "        str\u003dstr.toLowerCase();\r",
          "instance_detail": [
            {
              "pattern_action": "INS",
              "pattern_entity": {
                "entity_type": "Invocation",
                "entity_new value": "*",
                "entity_role": "*",
                "entity_parent": "null"
              },
              "concrete_change": {
                "operator": "INS",
                "src_type": "Invocation",
                "dst_type": "null",
                "src": "str.toLowerCase()",
                "dst": "null",
                "src_parent_type": "Assignment",
                "dst_parent_type": "null",
                "src_parent": "str \u003d str.toLowerCase()",
                "dst_parent": "null"
              },
              "line": 448,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang16"
            }
          ]
        }
      ]
    },
    {
      "revision": "Lang27",
      "repairability": [
        {
          "tool-name": "Nopol",
          "pattern-name": "Nopol:if_condition_upd_deep",
          "Unified_Diff_of-files:": "Starts Below...",
          "CHANGE_old:": "            if (expPos \u0026gt; -1) {",
          "CHANGE_new:": "            if(expPos\u0026gt;-1\u0026\u0026expPos\u0026lt;str.length()-1){\r",
          "instance_detail": [
            {
              "pattern_action": "ANY",
              "pattern_entity": {
                "entity_type": "*",
                "entity_new value": "*",
                "entity_role": "*",
                "entity_parent": {
                  "entity_type": "*",
                  "entity_new value": "*",
                  "entity_role": "condition",
                  "entity_parent": {
                    "entity_type": "If",
                    "entity_new value": "*",
                    "entity_role": "*",
                    "entity_parent": "null"
                  }
                }
              },
              "concrete_change": {
                "operator": "MOV",
                "src_type": "BinaryOperator",
                "dst_type": "BinaryOperator",
                "src": "expPos \u003e (-1)",
                "dst": "(expPos \u003e (-1))",
                "src_parent_type": "If",
                "dst_parent_type": "BinaryOperator",
                "src_parent": "if (expPos \u003e (-1)) {\n    mant \u003d str.substring(0, expPos);\n} else {\n    mant \u003d str;\n}",
                "dst_parent": "(expPos \u003e (-1)) \u0026\u0026 (expPos \u003c ((str.length()) - 1))"
              },
              "line": 488,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang27"
            }
          ]
        },
        {
          "tool-name": "JGenProg",
          "pattern-name": "JGenProg:any_statement_deep",
          "Unified_Diff_of-files:": "Starts Below...",
          "CHANGE_old:": "            if (expPos \u0026gt; -1) {",
          "CHANGE_new:": "            if(expPos\u0026gt;-1\u0026\u0026expPos\u0026lt;str.length()-1){\r",
          "instance_detail": [
            {
              "pattern_action": "ANY",
              "pattern_entity": {
                "entity_type": "*",
                "entity_new value": "*",
                "entity_role": "*",
                "entity_parent": {
                  "entity_type": "*",
                  "entity_new value": "*",
                  "entity_role": "Statement",
                  "entity_parent": "null"
                }
              },
              "concrete_change": {
                "operator": "INS",
                "src_type": "BinaryOperator",
                "dst_type": "null",
                "src": "(expPos \u003e (-1)) \u0026\u0026 (expPos \u003c ((str.length()) - 1))",
                "dst": "null",
                "src_parent_type": "If",
                "dst_parent_type": "null",
                "src_parent": "if ((expPos \u003e (-1)) \u0026\u0026 (expPos \u003c ((str.length()) - 1))) {\n    mant \u003d str.substring(0, expPos);\n} else {\n    mant \u003d str;\n}",
                "dst_parent": "null"
              },
              "line": 488,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang27"
            }
          ]
        },
        {
          "tool-name": "Arja",
          "pattern-name": "Arja:any_statement_deep",
          "Unified_Diff_of-files:": "Starts Below...",
          "CHANGE_old:": "            if (expPos \u0026gt; -1) {",
          "CHANGE_new:": "            if(expPos\u0026gt;-1\u0026\u0026expPos\u0026lt;str.length()-1){\r",
          "instance_detail": [
            {
              "pattern_action": "ANY",
              "pattern_entity": {
                "entity_type": "*",
                "entity_new value": "*",
                "entity_role": "*",
                "entity_parent": {
                  "entity_type": "*",
                  "entity_new value": "*",
                  "entity_role": "Statement",
                  "entity_parent": "null"
                }
              },
              "concrete_change": {
                "operator": "INS",
                "src_type": "BinaryOperator",
                "dst_type": "null",
                "src": "(expPos \u003e (-1)) \u0026\u0026 (expPos \u003c ((str.length()) - 1))",
                "dst": "null",
                "src_parent_type": "If",
                "dst_parent_type": "null",
                "src_parent": "if ((expPos \u003e (-1)) \u0026\u0026 (expPos \u003c ((str.length()) - 1))) {\n    mant \u003d str.substring(0, expPos);\n} else {\n    mant \u003d str;\n}",
                "dst_parent": "null"
              },
              "line": 488,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang27"
            }
          ]
        },
        {
          "tool-name": "Elixir",
          "pattern-name": "Elixir:Insert_Invocation",
          "Unified_Diff_of-files:": "Starts Below...",
          "CHANGE_old:": "            if (expPos \u0026gt; -1) {",
          "CHANGE_new:": "            if(expPos\u0026gt;-1\u0026\u0026expPos\u0026lt;str.length()-1){\r",
          "instance_detail": [
            {
              "pattern_action": "INS",
              "pattern_entity": {
                "entity_type": "Invocation",
                "entity_new value": "*",
                "entity_role": "*",
                "entity_parent": "null"
              },
              "concrete_change": {
                "operator": "INS",
                "src_type": "Invocation",
                "dst_type": "null",
                "src": "(str.length())",
                "dst": "null",
                "src_parent_type": "BinaryOperator",
                "dst_parent_type": "null",
                "src_parent": "((str.length()) - 1)",
                "dst_parent": "null"
              },
              "line": 488,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang27"
            }
          ]
        }
      ]
    },
    {
      "revision": "Lang39",
      "repairability": [
        {
          "tool-name": "JGenProg",
          "pattern-name": "JGenProg:any_statement_shallow",
          "Unified_Diff_of-files:": "Starts Below...",
          "INSERT:": "                }\r",
          "instance_detail": [
            {
              "pattern_action": "ANY",
              "pattern_entity": {
                "entity_type": "*",
                "entity_new value": "*",
                "entity_role": "Statement",
                "entity_parent": "null"
              },
              "concrete_change": {
                "operator": "INS",
                "src_type": "If",
                "dst_type": "null",
                "src": "if ((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) \u003d\u003d null)) || ((searchList[i].length()) \u003d\u003d 0)) || ((replacementList[i]) \u003d\u003d null)) {\n    continue;\n}",
                "dst": "null",
                "src_parent_type": "Block",
                "dst_parent_type": "null",
                "src_parent": "{\n    if ((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) \u003d\u003d null)) || ((searchList[i].length()) \u003d\u003d 0)) || ((replacementList[i]) \u003d\u003d null)) {\n        continue;\n    }\n    int greater \u003d (replacementList[i].length()) - (searchList[i].length());\n    if (greater \u003e 0) {\n        increase +\u003d 3 * greater;\n    }\n}",
                "dst_parent": "null"
              },
              "line": 3676,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang39"
            }
          ]
        },
        {
          "tool-name": "Arja",
          "pattern-name": "Arja:any_statement_shallow",
          "Unified_Diff_of-files:": "Starts Below...",
          "INSERT:": "                }\r",
          "instance_detail": [
            {
              "pattern_action": "ANY",
              "pattern_entity": {
                "entity_type": "*",
                "entity_new value": "*",
                "entity_role": "Statement",
                "entity_parent": "null"
              },
              "concrete_change": {
                "operator": "INS",
                "src_type": "If",
                "dst_type": "null",
                "src": "if ((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) \u003d\u003d null)) || ((searchList[i].length()) \u003d\u003d 0)) || ((replacementList[i]) \u003d\u003d null)) {\n    continue;\n}",
                "dst": "null",
                "src_parent_type": "Block",
                "dst_parent_type": "null",
                "src_parent": "{\n    if ((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) \u003d\u003d null)) || ((searchList[i].length()) \u003d\u003d 0)) || ((replacementList[i]) \u003d\u003d null)) {\n        continue;\n    }\n    int greater \u003d (replacementList[i].length()) - (searchList[i].length());\n    if (greater \u003e 0) {\n        increase +\u003d 3 * greater;\n    }\n}",
                "dst_parent": "null"
              },
              "line": 3676,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang39"
            }
          ]
        },
        {
          "tool-name": "Elixir",
          "pattern-name": "Elixir:Insert_Invocation",
          "Unified_Diff_of-files:": "Starts Below...",
          "INSERT:": "                }\r",
          "instance_detail": [
            {
              "pattern_action": "INS",
              "pattern_entity": {
                "entity_type": "Invocation",
                "entity_new value": "*",
                "entity_role": "*",
                "entity_parent": "null"
              },
              "concrete_change": {
                "operator": "INS",
                "src_type": "Invocation",
                "dst_type": "null",
                "src": "(searchList[i].length())",
                "dst": "null",
                "src_parent_type": "BinaryOperator",
                "dst_parent_type": "null",
                "src_parent": "((searchList[i].length()) \u003d\u003d 0)",
                "dst_parent": "null"
              },
              "line": 3676,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang39"
            }
          ]
        }
      ]
    },
    {
      "revision": "Lang41",
      "repairability": [
        {
          "tool-name": "JGenProg",
          "pattern-name": "JGenProg:any_statement_deep",
          "Unified_Diff_of-files:": "Starts Below...",
          "CHANGE_old:": "        return getPackageName(cls.getName());",
          "CHANGE_new:": "        return getPackageCanonicalName(cls.getName());\r",
          "instance_detail": [
            {
              "pattern_action": "ANY",
              "pattern_entity": {
                "entity_type": "*",
                "entity_new value": "*",
                "entity_role": "*",
                "entity_parent": {
                  "entity_type": "*",
                  "entity_new value": "*",
                  "entity_role": "Statement",
                  "entity_parent": "null"
                }
              },
              "concrete_change": {
                "operator": "UPD",
                "src_type": "Invocation",
                "dst_type": "Invocation",
                "src": "org.apache.commons.lang.ClassUtils.getShortClassName(cls.getName())",
                "dst": "org.apache.commons.lang.ClassUtils.getShortCanonicalName(cls.getName())",
                "src_parent_type": "Return",
                "dst_parent_type": "Return",
                "src_parent": "return org.apache.commons.lang.ClassUtils.getShortClassName(cls.getName())",
                "dst_parent": "return org.apache.commons.lang.ClassUtils.getShortCanonicalName(cls.getName())"
              },
              "line": 172,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang41"
            }
          ]
        },
        {
          "tool-name": "Arja",
          "pattern-name": "Arja:any_statement_deep",
          "Unified_Diff_of-files:": "Starts Below...",
          "CHANGE_old:": "        return getPackageName(cls.getName());",
          "CHANGE_new:": "        return getPackageCanonicalName(cls.getName());\r",
          "instance_detail": [
            {
              "pattern_action": "ANY",
              "pattern_entity": {
                "entity_type": "*",
                "entity_new value": "*",
                "entity_role": "*",
                "entity_parent": {
                  "entity_type": "*",
                  "entity_new value": "*",
                  "entity_role": "Statement",
                  "entity_parent": "null"
                }
              },
              "concrete_change": {
                "operator": "UPD",
                "src_type": "Invocation",
                "dst_type": "Invocation",
                "src": "org.apache.commons.lang.ClassUtils.getShortClassName(cls.getName())",
                "dst": "org.apache.commons.lang.ClassUtils.getShortCanonicalName(cls.getName())",
                "src_parent_type": "Return",
                "dst_parent_type": "Return",
                "src_parent": "return org.apache.commons.lang.ClassUtils.getShortClassName(cls.getName())",
                "dst_parent": "return org.apache.commons.lang.ClassUtils.getShortCanonicalName(cls.getName())"
              },
              "line": 172,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang41"
            }
          ]
        },
        {
          "tool-name": "Elixir",
          "pattern-name": "Elixir:update_invocation",
          "Unified_Diff_of-files:": "Starts Below...",
          "CHANGE_old:": "        return getPackageName(cls.getName());",
          "CHANGE_new:": "        return getPackageCanonicalName(cls.getName());\r",
          "instance_detail": [
            {
              "pattern_action": "UPD",
              "pattern_entity": {
                "entity_type": "Invocation",
                "entity_new value": "*",
                "entity_role": "*",
                "entity_parent": "null"
              },
              "concrete_change": {
                "operator": "UPD",
                "src_type": "Invocation",
                "dst_type": "Invocation",
                "src": "org.apache.commons.lang.ClassUtils.getShortClassName(cls.getName())",
                "dst": "org.apache.commons.lang.ClassUtils.getShortCanonicalName(cls.getName())",
                "src_parent_type": "Return",
                "dst_parent_type": "Return",
                "src_parent": "return org.apache.commons.lang.ClassUtils.getShortClassName(cls.getName())",
                "dst_parent": "return org.apache.commons.lang.ClassUtils.getShortCanonicalName(cls.getName())"
              },
              "line": 172,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang41"
            }
          ]
        }
      ]
    },
    {
      "revision": "Lang60",
      "repairability": [
        {
          "tool-name": "JGenProg",
          "pattern-name": "JGenProg:any_statement_deep",
          "Unified_Diff_of-files:": "Starts Below...",
          "CHANGE_old:": "        for (int i \u003d startIndex; i \u0026lt; thisBuf.length; i++) {",
          "CHANGE_new:": "        for (int i \u003d startIndex; i \u0026lt; size; i++) {\r",
          "instance_detail": [
            {
              "pattern_action": "ANY",
              "pattern_entity": {
                "entity_type": "*",
                "entity_new value": "*",
                "entity_role": "*",
                "entity_parent": {
                  "entity_type": "*",
                  "entity_new value": "*",
                  "entity_role": "Statement",
                  "entity_parent": "null"
                }
              },
              "concrete_change": {
                "operator": "UPD",
                "src_type": "FieldRead",
                "dst_type": "FieldRead",
                "src": "(thisBuf.length)",
                "dst": "(size)",
                "src_parent_type": "BinaryOperator",
                "dst_parent_type": "BinaryOperator",
                "src_parent": "i \u003c (thisBuf.length)",
                "dst_parent": "i \u003c (size)"
              },
              "line": 1673,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang60"
            }
          ]
        },
        {
          "tool-name": "Arja",
          "pattern-name": "Arja:any_statement_deep",
          "Unified_Diff_of-files:": "Starts Below...",
          "CHANGE_old:": "        for (int i \u003d startIndex; i \u0026lt; thisBuf.length; i++) {",
          "CHANGE_new:": "        for (int i \u003d startIndex; i \u0026lt; size; i++) {\r",
          "instance_detail": [
            {
              "pattern_action": "ANY",
              "pattern_entity": {
                "entity_type": "*",
                "entity_new value": "*",
                "entity_role": "*",
                "entity_parent": {
                  "entity_type": "*",
                  "entity_new value": "*",
                  "entity_role": "Statement",
                  "entity_parent": "null"
                }
              },
              "concrete_change": {
                "operator": "UPD",
                "src_type": "FieldRead",
                "dst_type": "FieldRead",
                "src": "(thisBuf.length)",
                "dst": "(size)",
                "src_parent_type": "BinaryOperator",
                "dst_parent_type": "BinaryOperator",
                "src_parent": "i \u003c (thisBuf.length)",
                "dst_parent": "i \u003c (size)"
              },
              "line": 1673,
              "file": "/Users/macbook/Documents/university/internship/coming/coming/Lang60"
            }
          ]
        }
      ]
    }
  ]
}